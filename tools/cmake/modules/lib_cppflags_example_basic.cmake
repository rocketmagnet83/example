if(WITH_LIB_CPPFLAGS_EXAMPLE_BASIC)
	if(NOT WITH_LIB_CPPFLAGS)
		message(FATAL_ERROR "Error: Try to build example WITH_LIB_CPPFLAGS_EXAMPLE_BASIC without WITH_LIB_CPPFLAGS")
	endif()

	message(STATUS "Building example WITH_LIB_CPPFLAGS_EXAMPLE_BASIC")

	set(LIB_CPPFLAGS_EXAMPLE_BASIC_SRC
        ${CMAKE_SOURCE_DIR}/src/examples/cppflags/cppflags.cpp
    )
	set(LIB_CPPFLAGS_EXAMPLE_BASIC_INSTALL_PATH
        ${OUTPUT_PATH}/examples/cppflags/
    )
	set(LIB_CPPFLAGS_EXAMPLE_OUTPUT_NAME_RELEASE 
        cppflags_release
    )
	set(LIB_CPPFLAGS_EXAMPLE_OUTPUT_NAME_DEBUG
        cppflags_debug
    )

	set(LIB_CPPFLAGS_EXAMPLE_BASIC_COMPILER g++)
	set(LIB_CPPFLAGS_EXAMPLE_BASIC_CXX_STANDARD 11)
	set(LIB_CPPFLAGS_EXAMPLE_BASIC_CXX_STANDARD_REQUIRED TRUE)

	add_executable(LIB_CPPFLAGS_EXAMPLE_BASIC ${LIB_CPPFLAGS_EXAMPLE_BASIC_SRC})
	set(CMAKE_C_COMPILER ${LIB_CPPFLAGS_EXAMPLE_BASIC_COMPILER})
	set(CMAKE_CXX_STANDARD ${LIB_CPPFLAGS_EXAMPLE_BASIC_CXX_STANDARD})
	set(CMAKE_CXX_STANDARD_REQUIRED ${LIB_CPPFLAGS_EXAMPLE_BASIC_CXX_STANDARD_REQUIRED})

	target_include_directories(LIB_CPPFLAGS_EXAMPLE_BASIC PRIVATE ${LIB_CPPFLAGS_INC_PATH})
       
	set_target_properties(LIB_CPPFLAGS_EXAMPLE_BASIC PROPERTIES RELEASE_OUTPUT_NAME ${LIB_CPPFLAGS_EXAMPLE_OUTPUT_NAME_RELEASE})
	set_target_properties(LIB_CPPFLAGS_EXAMPLE_BASIC PROPERTIES DEBUG_OUTPUT_NAME ${LIB_CPPFLAGS_EXAMPLE_OUTPUT_NAME_DEBUG})

	add_dependencies(LIB_CPPFLAGS_EXAMPLE_BASIC ${LIB_CPPFLAGS_DEPS})
	install(
		TARGETS LIB_CPPFLAGS_EXAMPLE_BASIC
		RUNTIME DESTINATION ${LIB_CPPFLAGS_EXAMPLE_BASIC_INSTALL_PATH}
	)

ENDIF()
